#!/bin/bash
## Scrape Lobsters newest page and display titles along with links
## Requirements: awk, curl, pup, sed, xargs
 
read -p "Please enter your browser's binary (e.g. firefox -- if it's in your \$PATH), or the full location of the binary (e.g. /opt/firefox/firefox): " browser
read -p "Which page would you like to scrape (home/recent/newest)? " page

case "$page" in
    "home") domain="https://lobste.rs";;
    "recent") domain="https://lobste.rs/recent";;
    "newest") domain="https://lobste.rs/newest";;
esac

title_filter="pup 'span:nth-of-type(1) .u-url text{}'"
url_filter="pup 'span:nth-of-type(1) .u-url attr{href}'"
sed_title_filter="sed -e \"s/&amp;#39;/'/g\" -e \"s/&amp;amp;/&/g\" -e \"s/â€™/'/g\" -e \"s/&#39;/'/g\""
sed_url_filter="sed 's/\/s\//https:\/\/lobste\.rs\/s\//g'"

titles="$(curl -s "$domain" | eval "$title_filter" | eval "$sed_title_filter")"
urls="$(curl -s "$domain" | eval "$url_filter" | eval "$sed_url_filter")"

urls_space_delimited="$(echo "$urls" | xargs)"
read -a url_array <<< $urls_space_delimited

clear
echo "$titles" | awk '{print NR-1 " " $0}'

read -p "Select the article you would like to read: " article

if [[ "$browser" == *"firefox"* ]] || [[ "$browser" == *"palemoon"* ]]; then
    command="$browser --new-tab ${url_array[$article]}"
    eval "$command"
else
    command="$browser ${url_array[$article]}"
    eval "$command"
fi
